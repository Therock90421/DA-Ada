Job start at 2023-07-20 17:23:28
Job run at:
   Static hostname: localhost.localdomain
Transient hostname: gpu-v20
         Icon name: computer-server
           Chassis: server
        Machine ID: 784265f58ec34d30aa8d221616ca53bd
           Boot ID: 6debafac88f347278c336dde145ef46a
  Operating System: CentOS Linux 7 (Core)
       CPE OS Name: cpe:/o:centos:centos:7
            Kernel: Linux 3.10.0-1127.13.1.el7.x86_64
      Architecture: x86-64
Use GPU 0$
Thu Jul 20 17:23:28 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 465.19.01    Driver Version: 465.19.01    CUDA Version: 11.3     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA Tesla V1...  On   | 00000000:06:00.0 Off |                    0 |
| N/A   36C    P0    40W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA Tesla V1...  On   | 00000000:07:00.0 Off |                    0 |
| N/A   37C    P0    43W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA Tesla V1...  On   | 00000000:0A:00.0 Off |                    0 |
| N/A   37C    P0    40W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA Tesla V1...  On   | 00000000:0B:00.0 Off |                    0 |
| N/A   35C    P0    42W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   4  NVIDIA Tesla V1...  On   | 00000000:85:00.0 Off |                    0 |
| N/A   36C    P0    40W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   5  NVIDIA Tesla V1...  On   | 00000000:86:00.0 Off |                    0 |
| N/A   38C    P0    43W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   6  NVIDIA Tesla V1...  On   | 00000000:89:00.0 Off |                    0 |
| N/A   38C    P0    42W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   7  NVIDIA Tesla V1...  On   | 00000000:8A:00.0 Off |                    0 |
| N/A   36C    P0    42W / 225W |      0MiB / 32510MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
# packages in environment at /lustre/S/lihaochen/anaconda3/envs/detr:
#
# Name                    Version                   Build  Channel
pytorch                   1.9.0           py3.7_cuda10.2_cudnn7.6.5_0    http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch
Command Line Args: Namespace(config_file='./configs/PascalVOC-Detection/da_clip_faster_rcnn_R_50_C4.yaml', dist_url='tcp://127.0.0.1:55232', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './pretrained_ckpt/regionclip/regionclip_pretrained-cc_rn50.pth', 'MODEL.CLIP.OFFLINE_RPN_CONFIG', './configs/COCO-InstanceSegmentation/mask_rcnn_R_50_C4_1x_ovd_FSD.yaml', 'MODEL.CLIP.BB_RPN_WEIGHTS', './pretrained_ckpt/rpn/rpn_coco_48.pth', 'MODEL.CLIP.TEXT_EMB_PATH', './pretrained_ckpt/concept_emb/cityscapes_8_cls_emb.pth', 'LEARNABLE_PROMPT.CTX_SIZE', '8', 'LEARNABLE_PROMPT.LoRA', 'True', 'LEARNABLE_PROMPT.TUNING', 'False'], resume=False)
[07/20 17:23:34 detectron2]: Rank of current process: 0. World size: 1
[07/20 17:23:35 detectron2]: Environment info:
----------------------  ---------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.13 (default, Mar 29 2022, 02:18:16) [GCC 7.5.0]
numpy                   1.19.2
detectron2              RegionCLIP @/lustre/S/lihaochen/RegionCLIP/detectron2
Compiler                GCC 9.3
CUDA compiler           not available
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.9.0 @/lustre/S/lihaochen/anaconda3/envs/detr/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   NVIDIA Tesla V100-SXM2-32GB (arch=7.0)
CUDA_HOME               None - invalid!
Pillow                  9.0.1
torchvision             0.10.0 @/lustre/S/lihaochen/anaconda3/envs/detr/lib/python3.7/site-packages/torchvision
torchvision arch flags  /lustre/S/lihaochen/anaconda3/envs/detr/lib/python3.7/site-packages/torchvision/_C.so
fvcore                  0.1.5.post20221221
iopath                  0.1.8
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[07/20 17:23:35 detectron2]: Command line arguments: Namespace(config_file='./configs/PascalVOC-Detection/da_clip_faster_rcnn_R_50_C4.yaml', dist_url='tcp://127.0.0.1:55232', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './pretrained_ckpt/regionclip/regionclip_pretrained-cc_rn50.pth', 'MODEL.CLIP.OFFLINE_RPN_CONFIG', './configs/COCO-InstanceSegmentation/mask_rcnn_R_50_C4_1x_ovd_FSD.yaml', 'MODEL.CLIP.BB_RPN_WEIGHTS', './pretrained_ckpt/rpn/rpn_coco_48.pth', 'MODEL.CLIP.TEXT_EMB_PATH', './pretrained_ckpt/concept_emb/cityscapes_8_cls_emb.pth', 'LEARNABLE_PROMPT.CTX_SIZE', '8', 'LEARNABLE_PROMPT.LoRA', 'True', 'LEARNABLE_PROMPT.TUNING', 'False'], resume=False)
[07/20 17:23:35 detectron2]: Contents of args.config_file=./configs/PascalVOC-Detection/da_clip_faster_rcnn_R_50_C4.yaml:
_BASE_: "../Base-RCNN-C4.yaml"
MODEL:
  META_ARCHITECTURE: "CLIPFastRCNN"
  BACKBONE:
    NAME: "build_clip_resnet_backbone"
    FREEZE_AT: 2
  WEIGHTS: "" 
  MASK_ON: False
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res4"]
    NORM: FrozenBN
    STEM_OUT_CHANNELS: 64
    RES2_OUT_CHANNELS: 256
  RPN:
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ["res4"]
  ROI_HEADS:
    NAME: "CLIPRes5ROIHeads"
    IN_FEATURES: ["res4"]
    NUM_CLASSES: 8 #48 # base categories
    SCORE_THRESH_TEST: 0.001
  ROI_BOX_HEAD:
    NAME: ""
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    CLS_AGNOSTIC_BBOX_REG: True
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  CLIP:
    CROP_REGION_TYPE: "RPN"
    USE_TEXT_EMB_CLASSIFIER: True
    CLSS_TEMP: 0.01
    NO_BOX_DELTA: False
    BG_CLS_LOSS_WEIGHT: 0.2
    FOCAL_SCALED_LOSS: 0.5
DATASETS:
  TRAIN_S: ("cityscapes_voc_trainval",)
  TRAIN_T: ("foggy_cityscapes_voc_trainval",)
  #TEST: ("cityscapes_voc_test",)
  TEST: ("foggy_cityscapes_voc_test",)
TEST:
  EVAL_PERIOD: 1000 #5000
SOLVER:
  IMS_PER_BATCH: 2 #16
  BASE_LR: 0.002
  STEPS: (60000, 80000)
  MAX_ITER: 25000
  WARMUP_ITERS: 5000 #5000
  CHECKPOINT_PERIOD: 2000
#INPUT:
  #MIN_SIZE_TRAIN_SAMPLING: choice
  #MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  #MAX_SIZE_TRAIN: 1333
  #MIN_SIZE_TEST: 800
  #MAX_SIZE_TEST: 1333
  #FORMAT: "RGB"
INPUT:
  MIN_SIZE_TRAIN: (800, 832, 864, 896, 928, 960, 992, 1024)
  MIN_SIZE_TRAIN_SAMPLING: "choice"
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TRAIN: 2048
  MAX_SIZE_TEST: 2048
  FORMAT: "RGB"
LEARNABLE_PROMPT:
  CTX_SIZE: 10
  CLASS: ('person', 'rider', 'car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle')
  TUNING: True

[07/20 17:23:35 detectron2]: Running with full config:
AUG:
  COLOR_JITTER:
  - 0.4
  - 0.4
  - 0.4
  - 0.1
  - 0.0
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS:
  - 3
  - 4
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 3
  MIXCUT: 0.0
  MIXCUT_AND_MIXUP: false
  MIXCUT_MINMAX: []
  MIXUP: 0.0
  MIXUP_MODE: batch
  MIXUP_PROB: 0.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO:
  - 0.75
  - 1.3333333333333333
  SCALE:
  - 0.08
  - 1.0
  TEST:
    CENTER_CROP: false
    IMAGE_SIZE:
    - 224
    - 224
    INTERPOLATION: 3
    MAX_SIZE: null
  TIMM_AUG:
    USE_LOADER: false
    USE_TRANSFORM: false
  TRAIN:
    IMAGE_SIZE:
    - 224
    - 224
    MAX_SIZE: null
  USE_TIMM: false
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  ATTR_LABELMAP_FILE: ''
  AUX: []
  BOX_EXTRA_FIELDS: []
  FACTORY_AUX: []
  FACTORY_TEST: []
  FACTORY_TRAIN: []
  FILTERED_CLASSIFICATION_DATASETS: ''
  HIERARCHY_FILE: ''
  LABELMAP_FILE: ''
  MAX_SEQ_LENGTH: 35
  NUM_CLASSES: 0
  PATH_AUX: []
  PATH_TEST: []
  PATH_TRAIN: []
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  ROOT: ''
  TEST:
  - foggy_cityscapes_voc_test
  TEST_SET: val
  TRAIN:
  - coco_2017_train
  TRAIN_S:
  - cityscapes_voc_trainval
  TRAIN_SET: train
  TRAIN_T:
  - foggy_cityscapes_voc_trainval
  VAL_SET: ''
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 2048
  MAX_SIZE_TRAIN: 2048
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  - 992
  - 1024
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  TEXT_TOKENIZER: openai_bpe
INPUT_DIR: ./datasets/custom_images
LEARNABLE_PROMPT:
  CLASS:
  - person
  - rider
  - car
  - truck
  - bus
  - train
  - motorcycle
  - bicycle
  CTX_SIZE: 8
  LoRA: true
  TUNING: false
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_clip_resnet_backbone
  CLIP:
    BB_RPN_WEIGHTS: ./pretrained_ckpt/rpn/rpn_coco_48.pth
    BG_CLS_LOSS_WEIGHT: 0.2
    CLSS_TEMP: 0.01
    CONCEPT_POOL_EMB: null
    CONCEPT_THRES: null
    CROP_REGION_TYPE: RPN
    FOCAL_SCALED_LOSS: 0.5
    GATHER_GPUS: false
    GET_CONCEPT_EMB: false
    GRID_REGIONS: false
    IMS_PER_BATCH_TEST: 8
    MULTIPLY_RPN_SCORE: false
    NO_BOX_DELTA: false
    OFFLINE_RPN_CONFIG: ./configs/COCO-InstanceSegmentation/mask_rcnn_R_50_C4_1x_ovd_FSD.yaml
    OFFLINE_RPN_LSJ_PRETRAINED: false
    OFFLINE_RPN_NMS_THRESH: null
    OFFLINE_RPN_POST_NMS_TOPK_TEST: null
    ONLY_SAMPLE_FG_PROPOSALS: false
    OPENSET_TEST_NUM_CLASSES: null
    OPENSET_TEST_TEXT_EMB_PATH: null
    PRETRAIN_IMG_TXT_LEVEL: true
    PRETRAIN_ONLY_EOT: false
    PRETRAIN_RPN_REGIONS: null
    PRETRAIN_SAMPLE_REGIONS: null
    RUN_CVPR_OVR: false
    TEACHER_CONCEPT_POOL_EMB: null
    TEACHER_POOLER_RESOLUTION: 14
    TEACHER_RESNETS_DEPTH: 50
    TEXT_EMB_DIM: 1024
    TEXT_EMB_PATH: ./pretrained_ckpt/concept_emb/cityscapes_8_cls_emb.pth
    USE_TEXT_EMB_CLASSIFIER: true
    VIS: false
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: CLIPFastRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 0.48145466
  - 0.4578275
  - 0.40821073
  PIXEL_STD:
  - 0.26862954
  - 0.26130258
  - 0.27577711
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id001
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS:
    - 10.0
    - 10.0
    - 5.0
    - 5.0
    CLS_AGNOSTIC_BBOX_REG: true
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: CLIPRes5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 8
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.001
    SOFT_NMS_ENABLED: false
    SOFT_NMS_METHOD: gaussian
    SOFT_NMS_PRUNE: 0.001
    SOFT_NMS_SIGMA: 0.5
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./pretrained_ckpt/regionclip/regionclip_pretrained-cc_rn50.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 2000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 25000
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 60000
  - 80000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 5000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[07/20 17:23:35 detectron2]: Full config saved to ./output/config.yaml
[07/20 17:23:35 d2.utils.env]: Using a generated random seed 35826769
Initial context: "X X X X X X X X X X X X X X X X"
Initializing a domain-invariant context
Number of domain-invariant context words (tokens): 8
Initializing a domain-specific context
Number of domain-specific context words (tokens): 8
Prompts: ['X X X X X X X X X X X X X X X X person in a image.', 'X X X X X X X X X X X X X X X X rider in a image.', 'X X X X X X X X X X X X X X X X car in a image.', 'X X X X X X X X X X X X X X X X truck in a image.', 'X X X X X X X X X X X X X X X X bus in a image.', 'X X X X X X X X X X X X X X X X train in a image.', 'X X X X X X X X X X X X X X X X motorcycle in a image.', 'X X X X X X X X X X X X X X X X bicycle in a image.', 'X X X X X X X X X X X X X X X X person in a image.', 'X X X X X X X X X X X X X X X X rider in a image.', 'X X X X X X X X X X X X X X X X car in a image.', 'X X X X X X X X X X X X X X X X truck in a image.', 'X X X X X X X X X X X X X X X X bus in a image.', 'X X X X X X X X X X X X X X X X train in a image.', 'X X X X X X X X X X X X X X X X motorcycle in a image.', 'X X X X X X X X X X X X X X X X bicycle in a image.']
[07/20 17:23:41 d2.engine.defaults]: Model:
CLIPFastRCNN(
  (offline_backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (backbone): ModifiedResNet(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): FrozenBatchNorm2d(num_features=32, eps=1e-05)
    (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): FrozenBatchNorm2d(num_features=32, eps=1e-05)
    (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn3): FrozenBatchNorm2d(num_features=64, eps=1e-05)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (relu): ReLU(inplace=True)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        (avgpool): Identity()
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        (relu): ReLU(inplace=True)
      )
    )
    (attnpool): AttentionPool2d(
      (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
      (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
      (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
      (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
    )
  )
  (offline_proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): CLIPRes5ROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (box_predictor): FastRCNNOutputLayers(
      (clip_model): CLIP(
        (visual): ModifiedResNet(
          (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu3): ReLU(inplace=True)
          (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (layer1): Sequential(
            (0): Bottleneck(
              (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
              (downsample): Sequential(
                (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
                (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Bottleneck(
              (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (2): Bottleneck(
              (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
          )
          (layer2): Sequential(
            (0): Bottleneck(
              (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
              (downsample): Sequential(
                (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
                (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Bottleneck(
              (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (2): Bottleneck(
              (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (3): Bottleneck(
              (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
          )
          (layer3): Sequential(
            (0): Bottleneck(
              (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
              (downsample): Sequential(
                (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
                (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Bottleneck(
              (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (2): Bottleneck(
              (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (3): Bottleneck(
              (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (4): Bottleneck(
              (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (5): Bottleneck(
              (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
          )
          (layer4): Sequential(
            (0): Bottleneck(
              (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
              (downsample): Sequential(
                (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
                (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Bottleneck(
              (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
            (2): Bottleneck(
              (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (avgpool): Identity()
              (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
            )
          )
          (attnpool): AttentionPool2d(
            (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
            (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
            (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
            (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
          )
        )
        (transformer): Transformer(
          (resblocks): Sequential(
            (0): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (1): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (2): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (3): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (4): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (5): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (6): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (7): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (8): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (9): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (10): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (11): ResidualAttentionBlock(
              (attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Sequential(
                (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                (gelu): QuickGELU()
                (c_proj): Linear(in_features=2048, out_features=512, bias=True)
              )
              (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
        (token_embedding): Embedding(49408, 512)
        (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (DAHead): DAPromptHead(
        (prompt_learner): PromptLearner(
          (clip_model): CLIP(
            (visual): ModifiedResNet(
              (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu1): ReLU(inplace=True)
              (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu2): ReLU(inplace=True)
              (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu3): ReLU(inplace=True)
              (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (layer1): Sequential(
                (0): Bottleneck(
                  (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                  (downsample): Sequential(
                    (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
                    (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
              )
              (layer2): Sequential(
                (0): Bottleneck(
                  (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                  (downsample): Sequential(
                    (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
                    (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
              )
              (layer3): Sequential(
                (0): Bottleneck(
                  (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                  (downsample): Sequential(
                    (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
                    (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (3): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (4): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (5): Bottleneck(
                  (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
              )
              (layer4): Sequential(
                (0): Bottleneck(
                  (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                  (downsample): Sequential(
                    (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
                    (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (1): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
                (2): Bottleneck(
                  (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu1): ReLU(inplace=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu2): ReLU(inplace=True)
                  (avgpool): Identity()
                  (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (relu3): ReLU(inplace=True)
                )
              )
              (attnpool): AttentionPool2d(
                (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
                (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
                (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
                (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
              )
            )
            (transformer): Transformer(
              (resblocks): Sequential(
                (0): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (1): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (2): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (3): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (4): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (5): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (6): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (7): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (8): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (9): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (10): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
                (11): ResidualAttentionBlock(
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                  )
                  (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                  (mlp): Sequential(
                    (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                    (gelu): QuickGELU()
                    (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                  )
                  (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (token_embedding): Embedding(49408, 512)
            (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
        (text_encoder): TextEncoder(
          (transformer): Transformer(
            (resblocks): Sequential(
              (0): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (1): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (2): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (3): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (4): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (5): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (6): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (7): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (8): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (9): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (10): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
              (11): ResidualAttentionBlock(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (mlp): Sequential(
                  (c_fc): Linear(in_features=512, out_features=2048, bias=True)
                  (gelu): QuickGELU()
                  (c_proj): Linear(in_features=2048, out_features=512, bias=True)
                )
                (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              )
            )
          )
          (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
      )
      (mse): MSELoss()
      (cls_score): Linear(in_features=1024, out_features=8, bias=False)
      (cls_bg_score): Linear(in_features=1024, out_features=1, bias=False)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
  )
  (Discriminator): DAFeatDiscriminator(
    (relu2): LeakyReLU(negative_slope=0.1)
    (sigmoid): Sigmoid()
    (cls_domain): ModuleList(
      (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (norm): ModuleList(
      (0): GroupNorm(32, 1024, eps=1e-05, affine=True)
      (1): GroupNorm(32, 512, eps=1e-05, affine=True)
      (2): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (mse): MSELoss()
  )
)
('cityscapes_voc_trainval',)
datasets/cityscapes_voc/VOC2007/ImageSets/Main/source_trainval.txt
[07/20 17:23:43 d2.data.build]: Removed 10 images with no usable annotations. 2965 images left.
[07/20 17:23:43 d2.data.build]: Distribution of instances among all 8 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|   person   | 17994        |   rider    | 1807         |    car     | 27155        |
|   truck    | 489          |    bus     | 385          |   train    | 171          |
| motorcycle | 739          |  bicycle   | 3729         |            |              |
|   total    | 52469        |            |              |            |              |
('foggy_cityscapes_voc_trainval',)
datasets/foggy_cityscapes_voc/VOC2007/ImageSets/Main/target_trainval.txt
[07/20 17:23:51 d2.data.build]: Removed 30 images with no usable annotations. 8895 images left.
[07/20 17:23:51 d2.data.build]: Distribution of instances among all 8 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|   person   | 53982        |   rider    | 5421         |    car     | 81465        |
|   truck    | 1467         |    bus     | 1155         |   train    | 513          |
| motorcycle | 2217         |  bicycle   | 11187        |            |              |
|   total    | 157407       |            |              |            |              |
[07/20 17:23:51 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 832, 864, 896, 928, 960, 992, 1024), max_size=2048, sample_style='choice'), RandomFlip()]
[07/20 17:23:51 d2.data.build]: Using training sampler TrainingSampler
[07/20 17:23:51 d2.data.common]: Serializing 2965 elements to byte tensors and concatenating them all ...
[07/20 17:23:51 d2.data.common]: Serialized dataset takes 4.01 MiB
[07/20 17:23:51 d2.data.common]: Serializing 8895 elements to byte tensors and concatenating them all ...
[07/20 17:23:51 d2.data.common]: Serialized dataset takes 12.76 MiB
WARNING [07/20 17:23:51 d2.solver.build]: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[07/20 17:23:52 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrained_ckpt/regionclip/regionclip_pretrained-cc_rn50.pth ...
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: Skip loading parameter 'offline_proposal_generator.rpn_head.conv.weight' to the model due to incompatible shapes: (256, 256, 3, 3) in the checkpoint but (1024, 1024, 3, 3) in the model! You might want to double check if this is expected.
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: Skip loading parameter 'offline_proposal_generator.rpn_head.conv.bias' to the model due to incompatible shapes: (256,) in the checkpoint but (1024,) in the model! You might want to double check if this is expected.
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: Skip loading parameter 'offline_proposal_generator.rpn_head.objectness_logits.weight' to the model due to incompatible shapes: (3, 256, 1, 1) in the checkpoint but (15, 1024, 1, 1) in the model! You might want to double check if this is expected.
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: Skip loading parameter 'offline_proposal_generator.rpn_head.objectness_logits.bias' to the model due to incompatible shapes: (3,) in the checkpoint but (15,) in the model! You might want to double check if this is expected.
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: Skip loading parameter 'offline_proposal_generator.rpn_head.anchor_deltas.weight' to the model due to incompatible shapes: (12, 256, 1, 1) in the checkpoint but (60, 1024, 1, 1) in the model! You might want to double check if this is expected.
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: Skip loading parameter 'offline_proposal_generator.rpn_head.anchor_deltas.bias' to the model due to incompatible shapes: (12,) in the checkpoint but (60,) in the model! You might want to double check if this is expected.
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
Discriminator.cls_domain.0.{bias, weight}
Discriminator.cls_domain.1.{bias, weight}
Discriminator.cls_domain.2.{bias, weight}
Discriminator.norm.0.{bias, weight}
Discriminator.norm.1.{bias, weight}
Discriminator.norm.2.{bias, running_mean, running_var, weight}
offline_backbone.res2.0.conv1.norm.{bias, weight}
offline_backbone.res2.0.conv1.weight
offline_backbone.res2.0.conv2.norm.{bias, weight}
offline_backbone.res2.0.conv2.weight
offline_backbone.res2.0.conv3.norm.{bias, weight}
offline_backbone.res2.0.conv3.weight
offline_backbone.res2.0.shortcut.norm.{bias, weight}
offline_backbone.res2.0.shortcut.weight
offline_backbone.res2.1.conv1.norm.{bias, weight}
offline_backbone.res2.1.conv1.weight
offline_backbone.res2.1.conv2.norm.{bias, weight}
offline_backbone.res2.1.conv2.weight
offline_backbone.res2.1.conv3.norm.{bias, weight}
offline_backbone.res2.1.conv3.weight
offline_backbone.res2.2.conv1.norm.{bias, weight}
offline_backbone.res2.2.conv1.weight
offline_backbone.res2.2.conv2.norm.{bias, weight}
offline_backbone.res2.2.conv2.weight
offline_backbone.res2.2.conv3.norm.{bias, weight}
offline_backbone.res2.2.conv3.weight
offline_backbone.res3.0.conv1.norm.{bias, weight}
offline_backbone.res3.0.conv1.weight
offline_backbone.res3.0.conv2.norm.{bias, weight}
offline_backbone.res3.0.conv2.weight
offline_backbone.res3.0.conv3.norm.{bias, weight}
offline_backbone.res3.0.conv3.weight
offline_backbone.res3.0.shortcut.norm.{bias, weight}
offline_backbone.res3.0.shortcut.weight
offline_backbone.res3.1.conv1.norm.{bias, weight}
offline_backbone.res3.1.conv1.weight
offline_backbone.res3.1.conv2.norm.{bias, weight}
offline_backbone.res3.1.conv2.weight
offline_backbone.res3.1.conv3.norm.{bias, weight}
offline_backbone.res3.1.conv3.weight
offline_backbone.res3.2.conv1.norm.{bias, weight}
offline_backbone.res3.2.conv1.weight
offline_backbone.res3.2.conv2.norm.{bias, weight}
offline_backbone.res3.2.conv2.weight
offline_backbone.res3.2.conv3.norm.{bias, weight}
offline_backbone.res3.2.conv3.weight
offline_backbone.res3.3.conv1.norm.{bias, weight}
offline_backbone.res3.3.conv1.weight
offline_backbone.res3.3.conv2.norm.{bias, weight}
offline_backbone.res3.3.conv2.weight
offline_backbone.res3.3.conv3.norm.{bias, weight}
offline_backbone.res3.3.conv3.weight
offline_backbone.res4.0.conv1.norm.{bias, weight}
offline_backbone.res4.0.conv1.weight
offline_backbone.res4.0.conv2.norm.{bias, weight}
offline_backbone.res4.0.conv2.weight
offline_backbone.res4.0.conv3.norm.{bias, weight}
offline_backbone.res4.0.conv3.weight
offline_backbone.res4.0.shortcut.norm.{bias, weight}
offline_backbone.res4.0.shortcut.weight
offline_backbone.res4.1.conv1.norm.{bias, weight}
offline_backbone.res4.1.conv1.weight
offline_backbone.res4.1.conv2.norm.{bias, weight}
offline_backbone.res4.1.conv2.weight
offline_backbone.res4.1.conv3.norm.{bias, weight}
offline_backbone.res4.1.conv3.weight
offline_backbone.res4.2.conv1.norm.{bias, weight}
offline_backbone.res4.2.conv1.weight
offline_backbone.res4.2.conv2.norm.{bias, weight}
offline_backbone.res4.2.conv2.weight
offline_backbone.res4.2.conv3.norm.{bias, weight}
offline_backbone.res4.2.conv3.weight
offline_backbone.res4.3.conv1.norm.{bias, weight}
offline_backbone.res4.3.conv1.weight
offline_backbone.res4.3.conv2.norm.{bias, weight}
offline_backbone.res4.3.conv2.weight
offline_backbone.res4.3.conv3.norm.{bias, weight}
offline_backbone.res4.3.conv3.weight
offline_backbone.res4.4.conv1.norm.{bias, weight}
offline_backbone.res4.4.conv1.weight
offline_backbone.res4.4.conv2.norm.{bias, weight}
offline_backbone.res4.4.conv2.weight
offline_backbone.res4.4.conv3.norm.{bias, weight}
offline_backbone.res4.4.conv3.weight
offline_backbone.res4.5.conv1.norm.{bias, weight}
offline_backbone.res4.5.conv1.weight
offline_backbone.res4.5.conv2.norm.{bias, weight}
offline_backbone.res4.5.conv2.weight
offline_backbone.res4.5.conv3.norm.{bias, weight}
offline_backbone.res4.5.conv3.weight
offline_backbone.stem.conv1.norm.{bias, weight}
offline_backbone.stem.conv1.weight
offline_proposal_generator.rpn_head.anchor_deltas.{bias, weight}
offline_proposal_generator.rpn_head.conv.{bias, weight}
offline_proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.ln_final.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.token_embedding.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.k_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.positional_embedding
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.q_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.v_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.{logit_scale, positional_embedding, text_projection}
roi_heads.box_predictor.DAHead.prompt_learner.{ctx_di, ctx_di_ema, ctx_ds, ctx_ds_ema, token_prefix, token_suffix}
roi_heads.box_predictor.DAHead.text_encoder.ln_final.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.{positional_embedding, text_projection}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.clip_model.ln_final.{bias, weight}
roi_heads.box_predictor.clip_model.token_embedding.weight
roi_heads.box_predictor.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.k_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.positional_embedding
roi_heads.box_predictor.clip_model.visual.attnpool.q_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.v_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.conv1.weight
roi_heads.box_predictor.clip_model.visual.conv2.weight
roi_heads.box_predictor.clip_model.visual.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer1.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer1.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer1.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer1.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer1.2.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.2.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.3.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.3.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.3.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.2.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.3.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.3.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.3.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.4.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.4.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.4.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.4.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.4.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.4.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.5.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.5.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.5.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.5.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.5.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.5.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer4.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer4.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer4.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer4.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer4.2.conv3.weight
roi_heads.box_predictor.clip_model.{logit_scale, positional_embedding, text_projection}
roi_heads.box_predictor.cls_bg_score.weight
roi_heads.box_predictor.cls_score.weight
WARNING [07/20 17:23:52 fvcore.common.checkpoint]: The checkpoint state_dict contains keys that are not used by the model:
  lang_encoder.{positional_embedding, text_projection}
  lang_encoder.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.0.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.0.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.0.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.0.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.0.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.1.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.1.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.1.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.1.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.1.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.2.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.2.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.2.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.2.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.2.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.3.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.3.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.3.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.3.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.3.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.4.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.4.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.4.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.4.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.4.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.5.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.5.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.5.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.5.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.5.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.6.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.6.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.6.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.6.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.6.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.7.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.7.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.7.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.7.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.7.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.8.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.8.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.8.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.8.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.8.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.9.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.9.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.9.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.9.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.9.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.10.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.10.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.10.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.10.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.10.ln_2.{bias, weight}
  lang_encoder.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}
  lang_encoder.transformer.resblocks.11.attn.out_proj.{bias, weight}
  lang_encoder.transformer.resblocks.11.ln_1.{bias, weight}
  lang_encoder.transformer.resblocks.11.mlp.c_fc.{bias, weight}
  lang_encoder.transformer.resblocks.11.mlp.c_proj.{bias, weight}
  lang_encoder.transformer.resblocks.11.ln_2.{bias, weight}
  lang_encoder.token_embedding.weight
  lang_encoder.ln_final.{bias, weight}
  teacher_backbone.conv1.weight
  teacher_backbone.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.conv2.weight
  teacher_backbone.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.conv3.weight
  teacher_backbone.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.0.conv1.weight
  teacher_backbone.layer1.0.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.0.conv2.weight
  teacher_backbone.layer1.0.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.0.conv3.weight
  teacher_backbone.layer1.0.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.0.downsample.0.weight
  teacher_backbone.layer1.0.downsample.1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.1.conv1.weight
  teacher_backbone.layer1.1.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.1.conv2.weight
  teacher_backbone.layer1.1.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.1.conv3.weight
  teacher_backbone.layer1.1.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.2.conv1.weight
  teacher_backbone.layer1.2.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.2.conv2.weight
  teacher_backbone.layer1.2.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer1.2.conv3.weight
  teacher_backbone.layer1.2.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.0.conv1.weight
  teacher_backbone.layer2.0.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.0.conv2.weight
  teacher_backbone.layer2.0.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.0.conv3.weight
  teacher_backbone.layer2.0.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.0.downsample.0.weight
  teacher_backbone.layer2.0.downsample.1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.1.conv1.weight
  teacher_backbone.layer2.1.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.1.conv2.weight
  teacher_backbone.layer2.1.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.1.conv3.weight
  teacher_backbone.layer2.1.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.2.conv1.weight
  teacher_backbone.layer2.2.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.2.conv2.weight
  teacher_backbone.layer2.2.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.2.conv3.weight
  teacher_backbone.layer2.2.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.3.conv1.weight
  teacher_backbone.layer2.3.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.3.conv2.weight
  teacher_backbone.layer2.3.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer2.3.conv3.weight
  teacher_backbone.layer2.3.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.0.conv1.weight
  teacher_backbone.layer3.0.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.0.conv2.weight
  teacher_backbone.layer3.0.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.0.conv3.weight
  teacher_backbone.layer3.0.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.0.downsample.0.weight
  teacher_backbone.layer3.0.downsample.1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.1.conv1.weight
  teacher_backbone.layer3.1.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.1.conv2.weight
  teacher_backbone.layer3.1.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.1.conv3.weight
  teacher_backbone.layer3.1.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.2.conv1.weight
  teacher_backbone.layer3.2.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.2.conv2.weight
  teacher_backbone.layer3.2.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.2.conv3.weight
  teacher_backbone.layer3.2.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.3.conv1.weight
  teacher_backbone.layer3.3.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.3.conv2.weight
  teacher_backbone.layer3.3.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.3.conv3.weight
  teacher_backbone.layer3.3.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.4.conv1.weight
  teacher_backbone.layer3.4.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.4.conv2.weight
  teacher_backbone.layer3.4.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.4.conv3.weight
  teacher_backbone.layer3.4.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.5.conv1.weight
  teacher_backbone.layer3.5.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.5.conv2.weight
  teacher_backbone.layer3.5.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer3.5.conv3.weight
  teacher_backbone.layer3.5.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.0.conv1.weight
  teacher_backbone.layer4.0.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.0.conv2.weight
  teacher_backbone.layer4.0.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.0.conv3.weight
  teacher_backbone.layer4.0.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.0.downsample.0.weight
  teacher_backbone.layer4.0.downsample.1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.1.conv1.weight
  teacher_backbone.layer4.1.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.1.conv2.weight
  teacher_backbone.layer4.1.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.1.conv3.weight
  teacher_backbone.layer4.1.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.2.conv1.weight
  teacher_backbone.layer4.2.bn1.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.2.conv2.weight
  teacher_backbone.layer4.2.bn2.{bias, running_mean, running_var, weight}
  teacher_backbone.layer4.2.conv3.weight
  teacher_backbone.layer4.2.bn3.{bias, running_mean, running_var, weight}
  teacher_backbone.attnpool.positional_embedding
  teacher_backbone.attnpool.k_proj.{bias, weight}
  teacher_backbone.attnpool.q_proj.{bias, weight}
  teacher_backbone.attnpool.v_proj.{bias, weight}
  teacher_backbone.attnpool.c_proj.{bias, weight}
  offline_backbone.fpn_lateral2.{bias, weight}
  offline_backbone.fpn_output2.{bias, weight}
  offline_backbone.fpn_lateral3.{bias, weight}
  offline_backbone.fpn_output3.{bias, weight}
  offline_backbone.fpn_lateral4.{bias, weight}
  offline_backbone.fpn_output4.{bias, weight}
  offline_backbone.fpn_lateral5.{bias, weight}
  offline_backbone.fpn_output5.{bias, weight}
  offline_backbone.bottom_up.stem.conv1.weight
  offline_backbone.bottom_up.stem.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.0.shortcut.weight
  offline_backbone.bottom_up.res2.0.shortcut.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.0.conv1.weight
  offline_backbone.bottom_up.res2.0.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.0.conv2.weight
  offline_backbone.bottom_up.res2.0.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.0.conv3.weight
  offline_backbone.bottom_up.res2.0.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.1.conv1.weight
  offline_backbone.bottom_up.res2.1.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.1.conv2.weight
  offline_backbone.bottom_up.res2.1.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.1.conv3.weight
  offline_backbone.bottom_up.res2.1.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.2.conv1.weight
  offline_backbone.bottom_up.res2.2.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.2.conv2.weight
  offline_backbone.bottom_up.res2.2.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res2.2.conv3.weight
  offline_backbone.bottom_up.res2.2.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.0.shortcut.weight
  offline_backbone.bottom_up.res3.0.shortcut.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.0.conv1.weight
  offline_backbone.bottom_up.res3.0.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.0.conv2.weight
  offline_backbone.bottom_up.res3.0.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.0.conv3.weight
  offline_backbone.bottom_up.res3.0.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.1.conv1.weight
  offline_backbone.bottom_up.res3.1.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.1.conv2.weight
  offline_backbone.bottom_up.res3.1.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.1.conv3.weight
  offline_backbone.bottom_up.res3.1.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.2.conv1.weight
  offline_backbone.bottom_up.res3.2.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.2.conv2.weight
  offline_backbone.bottom_up.res3.2.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.2.conv3.weight
  offline_backbone.bottom_up.res3.2.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.3.conv1.weight
  offline_backbone.bottom_up.res3.3.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.3.conv2.weight
  offline_backbone.bottom_up.res3.3.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res3.3.conv3.weight
  offline_backbone.bottom_up.res3.3.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.0.shortcut.weight
  offline_backbone.bottom_up.res4.0.shortcut.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.0.conv1.weight
  offline_backbone.bottom_up.res4.0.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.0.conv2.weight
  offline_backbone.bottom_up.res4.0.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.0.conv3.weight
  offline_backbone.bottom_up.res4.0.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.1.conv1.weight
  offline_backbone.bottom_up.res4.1.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.1.conv2.weight
  offline_backbone.bottom_up.res4.1.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.1.conv3.weight
  offline_backbone.bottom_up.res4.1.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.2.conv1.weight
  offline_backbone.bottom_up.res4.2.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.2.conv2.weight
  offline_backbone.bottom_up.res4.2.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.2.conv3.weight
  offline_backbone.bottom_up.res4.2.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.3.conv1.weight
  offline_backbone.bottom_up.res4.3.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.3.conv2.weight
  offline_backbone.bottom_up.res4.3.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.3.conv3.weight
  offline_backbone.bottom_up.res4.3.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.4.conv1.weight
  offline_backbone.bottom_up.res4.4.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.4.conv2.weight
  offline_backbone.bottom_up.res4.4.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.4.conv3.weight
  offline_backbone.bottom_up.res4.4.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.5.conv1.weight
  offline_backbone.bottom_up.res4.5.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.5.conv2.weight
  offline_backbone.bottom_up.res4.5.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res4.5.conv3.weight
  offline_backbone.bottom_up.res4.5.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.0.shortcut.weight
  offline_backbone.bottom_up.res5.0.shortcut.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.0.conv1.weight
  offline_backbone.bottom_up.res5.0.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.0.conv2.weight
  offline_backbone.bottom_up.res5.0.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.0.conv3.weight
  offline_backbone.bottom_up.res5.0.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.1.conv1.weight
  offline_backbone.bottom_up.res5.1.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.1.conv2.weight
  offline_backbone.bottom_up.res5.1.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.1.conv3.weight
  offline_backbone.bottom_up.res5.1.conv3.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.2.conv1.weight
  offline_backbone.bottom_up.res5.2.conv1.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.2.conv2.weight
  offline_backbone.bottom_up.res5.2.conv2.norm.{bias, running_mean, running_var, weight}
  offline_backbone.bottom_up.res5.2.conv3.weight
  offline_backbone.bottom_up.res5.2.conv3.norm.{bias, running_mean, running_var, weight}
[07/20 17:23:52 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrained_ckpt/rpn/rpn_coco_48.pth ...
[07/20 17:23:52 d2.checkpoint.clip_model_loading]: Renaming CLIP weights ......
[07/20 17:23:52 d2.checkpoint.clip_model_loading]: Following weights matched with model:
| Names in Model                                          | Names in Checkpoint                                                                                | Shapes                                         |
|:--------------------------------------------------------|:---------------------------------------------------------------------------------------------------|:-----------------------------------------------|
| offline_backbone.res2.0.conv1.*                         | offline_backbone.res2.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,1,1)            |
| offline_backbone.res2.0.conv2.*                         | offline_backbone.res2.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)            |
| offline_backbone.res2.0.conv3.*                         | offline_backbone.res2.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)       |
| offline_backbone.res2.0.shortcut.*                      | offline_backbone.res2.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) (256,) (256,) (256,) (256,64,1,1)       |
| offline_backbone.res2.1.conv1.*                         | offline_backbone.res2.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)           |
| offline_backbone.res2.1.conv2.*                         | offline_backbone.res2.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)            |
| offline_backbone.res2.1.conv3.*                         | offline_backbone.res2.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)       |
| offline_backbone.res2.2.conv1.*                         | offline_backbone.res2.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)           |
| offline_backbone.res2.2.conv2.*                         | offline_backbone.res2.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)            |
| offline_backbone.res2.2.conv3.*                         | offline_backbone.res2.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)       |
| offline_backbone.res3.0.conv1.*                         | offline_backbone.res3.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,256,1,1)      |
| offline_backbone.res3.0.conv2.*                         | offline_backbone.res3.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)      |
| offline_backbone.res3.0.conv3.*                         | offline_backbone.res3.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)      |
| offline_backbone.res3.0.shortcut.*                      | offline_backbone.res3.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (512,) (512,) (512,) (512,) (512,256,1,1)      |
| offline_backbone.res3.1.conv1.*                         | offline_backbone.res3.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)      |
| offline_backbone.res3.1.conv2.*                         | offline_backbone.res3.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)      |
| offline_backbone.res3.1.conv3.*                         | offline_backbone.res3.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)      |
| offline_backbone.res3.2.conv1.*                         | offline_backbone.res3.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)      |
| offline_backbone.res3.2.conv2.*                         | offline_backbone.res3.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)      |
| offline_backbone.res3.2.conv3.*                         | offline_backbone.res3.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)      |
| offline_backbone.res3.3.conv1.*                         | offline_backbone.res3.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)      |
| offline_backbone.res3.3.conv2.*                         | offline_backbone.res3.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)      |
| offline_backbone.res3.3.conv3.*                         | offline_backbone.res3.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)      |
| offline_backbone.res4.0.conv1.*                         | offline_backbone.res4.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,512,1,1)      |
| offline_backbone.res4.0.conv2.*                         | offline_backbone.res4.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)      |
| offline_backbone.res4.0.conv3.*                         | offline_backbone.res4.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1) |
| offline_backbone.res4.0.shortcut.*                      | offline_backbone.res4.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1) |
| offline_backbone.res4.1.conv1.*                         | offline_backbone.res4.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)     |
| offline_backbone.res4.1.conv2.*                         | offline_backbone.res4.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)      |
| offline_backbone.res4.1.conv3.*                         | offline_backbone.res4.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1) |
| offline_backbone.res4.2.conv1.*                         | offline_backbone.res4.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)     |
| offline_backbone.res4.2.conv2.*                         | offline_backbone.res4.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)      |
| offline_backbone.res4.2.conv3.*                         | offline_backbone.res4.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1) |
| offline_backbone.res4.3.conv1.*                         | offline_backbone.res4.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)     |
| offline_backbone.res4.3.conv2.*                         | offline_backbone.res4.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)      |
| offline_backbone.res4.3.conv3.*                         | offline_backbone.res4.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1) |
| offline_backbone.res4.4.conv1.*                         | offline_backbone.res4.4.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)     |
| offline_backbone.res4.4.conv2.*                         | offline_backbone.res4.4.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)      |
| offline_backbone.res4.4.conv3.*                         | offline_backbone.res4.4.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1) |
| offline_backbone.res4.5.conv1.*                         | offline_backbone.res4.5.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)     |
| offline_backbone.res4.5.conv2.*                         | offline_backbone.res4.5.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)      |
| offline_backbone.res4.5.conv3.*                         | offline_backbone.res4.5.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1) |
| offline_backbone.stem.conv1.*                           | offline_backbone.stem.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,3,7,7)             |
| offline_proposal_generator.rpn_head.anchor_deltas.*     | offline_proposal_generator.rpn_head.anchor_deltas.{bias,weight}                                    | (60,) (60,1024,1,1)                            |
| offline_proposal_generator.rpn_head.conv.*              | offline_proposal_generator.rpn_head.conv.{bias,weight}                                             | (1024,) (1024,1024,3,3)                        |
| offline_proposal_generator.rpn_head.objectness_logits.* | offline_proposal_generator.rpn_head.objectness_logits.{bias,weight}                                | (15,) (15,1024,1,1)                            |
WARNING [07/20 17:23:53 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
Discriminator.cls_domain.0.{bias, weight}
Discriminator.cls_domain.1.{bias, weight}
Discriminator.cls_domain.2.{bias, weight}
Discriminator.norm.0.{bias, weight}
Discriminator.norm.1.{bias, weight}
Discriminator.norm.2.{bias, running_mean, running_var, weight}
backbone.attnpool.c_proj.{bias, weight}
backbone.attnpool.k_proj.{bias, weight}
backbone.attnpool.positional_embedding
backbone.attnpool.q_proj.{bias, weight}
backbone.attnpool.v_proj.{bias, weight}
backbone.bn1.{bias, running_mean, running_var, weight}
backbone.bn2.{bias, running_mean, running_var, weight}
backbone.bn3.{bias, running_mean, running_var, weight}
backbone.conv1.weight
backbone.conv2.weight
backbone.conv3.weight
backbone.layer1.0.bn1.{bias, running_mean, running_var, weight}
backbone.layer1.0.bn2.{bias, running_mean, running_var, weight}
backbone.layer1.0.bn3.{bias, running_mean, running_var, weight}
backbone.layer1.0.conv1.weight
backbone.layer1.0.conv2.weight
backbone.layer1.0.conv3.weight
backbone.layer1.0.downsample.0.weight
backbone.layer1.0.downsample.1.{bias, running_mean, running_var, weight}
backbone.layer1.1.bn1.{bias, running_mean, running_var, weight}
backbone.layer1.1.bn2.{bias, running_mean, running_var, weight}
backbone.layer1.1.bn3.{bias, running_mean, running_var, weight}
backbone.layer1.1.conv1.weight
backbone.layer1.1.conv2.weight
backbone.layer1.1.conv3.weight
backbone.layer1.2.bn1.{bias, running_mean, running_var, weight}
backbone.layer1.2.bn2.{bias, running_mean, running_var, weight}
backbone.layer1.2.bn3.{bias, running_mean, running_var, weight}
backbone.layer1.2.conv1.weight
backbone.layer1.2.conv2.weight
backbone.layer1.2.conv3.weight
backbone.layer2.0.bn1.{bias, running_mean, running_var, weight}
backbone.layer2.0.bn2.{bias, running_mean, running_var, weight}
backbone.layer2.0.bn3.{bias, running_mean, running_var, weight}
backbone.layer2.0.conv1.weight
backbone.layer2.0.conv2.weight
backbone.layer2.0.conv3.weight
backbone.layer2.0.downsample.0.weight
backbone.layer2.0.downsample.1.{bias, running_mean, running_var, weight}
backbone.layer2.1.bn1.{bias, running_mean, running_var, weight}
backbone.layer2.1.bn2.{bias, running_mean, running_var, weight}
backbone.layer2.1.bn3.{bias, running_mean, running_var, weight}
backbone.layer2.1.conv1.weight
backbone.layer2.1.conv2.weight
backbone.layer2.1.conv3.weight
backbone.layer2.2.bn1.{bias, running_mean, running_var, weight}
backbone.layer2.2.bn2.{bias, running_mean, running_var, weight}
backbone.layer2.2.bn3.{bias, running_mean, running_var, weight}
backbone.layer2.2.conv1.weight
backbone.layer2.2.conv2.weight
backbone.layer2.2.conv3.weight
backbone.layer2.3.bn1.{bias, running_mean, running_var, weight}
backbone.layer2.3.bn2.{bias, running_mean, running_var, weight}
backbone.layer2.3.bn3.{bias, running_mean, running_var, weight}
backbone.layer2.3.conv1.weight
backbone.layer2.3.conv2.weight
backbone.layer2.3.conv3.weight
backbone.layer3.0.bn1.{bias, running_mean, running_var, weight}
backbone.layer3.0.bn2.{bias, running_mean, running_var, weight}
backbone.layer3.0.bn3.{bias, running_mean, running_var, weight}
backbone.layer3.0.conv1.weight
backbone.layer3.0.conv2.weight
backbone.layer3.0.conv3.weight
backbone.layer3.0.downsample.0.weight
backbone.layer3.0.downsample.1.{bias, running_mean, running_var, weight}
backbone.layer3.1.bn1.{bias, running_mean, running_var, weight}
backbone.layer3.1.bn2.{bias, running_mean, running_var, weight}
backbone.layer3.1.bn3.{bias, running_mean, running_var, weight}
backbone.layer3.1.conv1.weight
backbone.layer3.1.conv2.weight
backbone.layer3.1.conv3.weight
backbone.layer3.2.bn1.{bias, running_mean, running_var, weight}
backbone.layer3.2.bn2.{bias, running_mean, running_var, weight}
backbone.layer3.2.bn3.{bias, running_mean, running_var, weight}
backbone.layer3.2.conv1.weight
backbone.layer3.2.conv2.weight
backbone.layer3.2.conv3.weight
backbone.layer3.3.bn1.{bias, running_mean, running_var, weight}
backbone.layer3.3.bn2.{bias, running_mean, running_var, weight}
backbone.layer3.3.bn3.{bias, running_mean, running_var, weight}
backbone.layer3.3.conv1.weight
backbone.layer3.3.conv2.weight
backbone.layer3.3.conv3.weight
backbone.layer3.4.bn1.{bias, running_mean, running_var, weight}
backbone.layer3.4.bn2.{bias, running_mean, running_var, weight}
backbone.layer3.4.bn3.{bias, running_mean, running_var, weight}
backbone.layer3.4.conv1.weight
backbone.layer3.4.conv2.weight
backbone.layer3.4.conv3.weight
backbone.layer3.5.bn1.{bias, running_mean, running_var, weight}
backbone.layer3.5.bn2.{bias, running_mean, running_var, weight}
backbone.layer3.5.bn3.{bias, running_mean, running_var, weight}
backbone.layer3.5.conv1.weight
backbone.layer3.5.conv2.weight
backbone.layer3.5.conv3.weight
backbone.layer4.0.bn1.{bias, running_mean, running_var, weight}
backbone.layer4.0.bn2.{bias, running_mean, running_var, weight}
backbone.layer4.0.bn3.{bias, running_mean, running_var, weight}
backbone.layer4.0.conv1.weight
backbone.layer4.0.conv2.weight
backbone.layer4.0.conv3.weight
backbone.layer4.0.downsample.0.weight
backbone.layer4.0.downsample.1.{bias, running_mean, running_var, weight}
backbone.layer4.1.bn1.{bias, running_mean, running_var, weight}
backbone.layer4.1.bn2.{bias, running_mean, running_var, weight}
backbone.layer4.1.bn3.{bias, running_mean, running_var, weight}
backbone.layer4.1.conv1.weight
backbone.layer4.1.conv2.weight
backbone.layer4.1.conv3.weight
backbone.layer4.2.bn1.{bias, running_mean, running_var, weight}
backbone.layer4.2.bn2.{bias, running_mean, running_var, weight}
backbone.layer4.2.bn3.{bias, running_mean, running_var, weight}
backbone.layer4.2.conv1.weight
backbone.layer4.2.conv2.weight
backbone.layer4.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.ln_final.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.token_embedding.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.k_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.positional_embedding
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.q_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.attnpool.v_proj.{bias, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer1.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer2.3.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.3.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.4.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer3.5.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.downsample.0.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.1.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.conv1.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.conv2.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.visual.layer4.2.conv3.weight
roi_heads.box_predictor.DAHead.prompt_learner.clip_model.{logit_scale, positional_embedding, text_projection}
roi_heads.box_predictor.DAHead.prompt_learner.{ctx_di, ctx_di_ema, ctx_ds, ctx_ds_ema, token_prefix, token_suffix}
roi_heads.box_predictor.DAHead.text_encoder.ln_final.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.0.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.1.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.10.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.11.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.2.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.3.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.4.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.5.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.6.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.7.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.8.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.attn.out_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.ln_1.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.ln_2.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.transformer.resblocks.9.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.DAHead.text_encoder.{positional_embedding, text_projection}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.clip_model.ln_final.{bias, weight}
roi_heads.box_predictor.clip_model.token_embedding.weight
roi_heads.box_predictor.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.ln_1.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.ln_2.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}
roi_heads.box_predictor.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.c_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.k_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.positional_embedding
roi_heads.box_predictor.clip_model.visual.attnpool.q_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.attnpool.v_proj.{bias, weight}
roi_heads.box_predictor.clip_model.visual.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.conv1.weight
roi_heads.box_predictor.clip_model.visual.conv2.weight
roi_heads.box_predictor.clip_model.visual.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer1.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer1.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer1.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer1.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer1.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer1.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer1.2.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer2.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.2.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer2.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer2.3.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer2.3.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer2.3.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer3.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.2.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.3.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.3.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.3.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.3.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.3.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.3.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.4.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.4.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.4.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.4.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.4.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.4.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer3.5.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.5.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.5.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer3.5.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer3.5.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer3.5.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.0.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.0.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.0.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.downsample.0.weight
roi_heads.box_predictor.clip_model.visual.layer4.0.downsample.1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.1.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer4.1.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer4.1.conv3.weight
roi_heads.box_predictor.clip_model.visual.layer4.2.bn1.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.2.bn2.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.2.bn3.{bias, running_mean, running_var, weight}
roi_heads.box_predictor.clip_model.visual.layer4.2.conv1.weight
roi_heads.box_predictor.clip_model.visual.layer4.2.conv2.weight
roi_heads.box_predictor.clip_model.visual.layer4.2.conv3.weight
roi_heads.box_predictor.clip_model.{logit_scale, positional_embedding, text_projection}
roi_heads.box_predictor.cls_bg_score.weight
roi_heads.box_predictor.cls_score.weight
WARNING [07/20 17:23:53 fvcore.common.checkpoint]: The checkpoint state_dict contains keys that are not used by the model:
  ignore_others
[07/20 17:23:53 d2.engine.train_loop]: Starting training from iteration 0
[07/20 17:23:55 d2.engine.hooks]: Total training time: 0:00:02 (0:00:00 on hooks)
[07/20 17:23:55 d2.utils.events]:  iter: 0  total_loss: 7.668  loss_cls: 2.142  loss_box_reg: 0.5266  loss_dis_0: 2.387  loss_dis_1: 2.613  data_time: 1.2651  lr: N/A  max_mem: 4462M
Job end at 2023-07-20 17:23:56
